* {
  margin: 0.2vmin;
  padding: 0.2vmin;
  box-sizing: border-box;
  user-select: none;
}

body {
  margin: 0.5vmin;
  font: normal calc(.7em + .3vmin) "open sans";
  color: #666;
  background-color: #fff;
}

.main {
  width: 95%;
  max-width: 800px;
  min-width: 500px;
  margin: 0.3vh auto;
}

.flexprops {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  border: 1px solid #3e5e74;
  border-radius: 0.2vmin;
}
.flexprops .prop {
  display: flex;
  flex-direction: column;
  min-width: 13%;
  max-width: 20%;
  margin: 0.2vmin;
}
.flexprops .prop .propName {
  font-weight: bold;
  text-align: center;
  padding: 0.2vmin;
  cursor: help;
}
.flexprops .prop .propval {
  text-align: center;
  padding: 0.25vh 1vw;
  margin: 0.2vmin;
  border: 1px solid #3e5e74;
  border-radius: 0.2vmin;
  color: #3e5e74;
  background-color: transparent;
  cursor: pointer;
}
.flexprops .prop .propval.selected {
  background-color: #9cb6c9;
  color: white;
}
.flexprops .prop .propval:hover:not(.selected) {
  background-color: #dee7ed;
}

.demo-wrapper {
  width: 50%;
  max-width: 500px;
  min-width: 150px;
  margin: 0.2vmin auto;
}
.demo-wrapper .container {
  display: flex;
  flex-direction: var(--prop-flex-direction);
  flex-wrap: var(--prop-flex-wrap);
  justify-content: var(--prop-justify-content);
  align-items: var(--prop-align-items);
  align-content: var(--prop-align-content);
  height: 7vh;
  background-color: #aaa;
  border: 1px solid rgba(0, 0, 0, 0.7);
  border-radius: 0.2vmin;
  /* each flex item inside the flex-parent */
}
.demo-wrapper .container p {
  flex-basis: var(--prop-flex-basis);
  flex-grow: var(--prop-flex-grow);
  flex-shrink: var(--prop-flex-shrink);
  text-align: center;
  padding: 0.25vh 1vw;
  margin: 0.2vmin;
  border: 1px solid rgba(0, 0, 0, 0.99);
  border-radius: 0.2vmin;
  color: rgba(0, 0, 0, 0.99);
  background-color: rgba(102, 189, 255, 0.5);
}

/*# sourceMappingURL=style.css.map */
